// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: hashing.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebSocketMetadata struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Type   string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Action string                 `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*WebSocketMetadata_NodeMetaData
	//	*WebSocketMetadata_RequestMetaData
	Data          isWebSocketMetadata_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketMetadata) Reset() {
	*x = WebSocketMetadata{}
	mi := &file_hashing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketMetadata) ProtoMessage() {}

func (x *WebSocketMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketMetadata.ProtoReflect.Descriptor instead.
func (*WebSocketMetadata) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{0}
}

func (x *WebSocketMetadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WebSocketMetadata) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *WebSocketMetadata) GetData() isWebSocketMetadata_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WebSocketMetadata) GetNodeMetaData() *NodeMetaData {
	if x != nil {
		if x, ok := x.Data.(*WebSocketMetadata_NodeMetaData); ok {
			return x.NodeMetaData
		}
	}
	return nil
}

func (x *WebSocketMetadata) GetRequestMetaData() *RequestMetaData {
	if x != nil {
		if x, ok := x.Data.(*WebSocketMetadata_RequestMetaData); ok {
			return x.RequestMetaData
		}
	}
	return nil
}

type isWebSocketMetadata_Data interface {
	isWebSocketMetadata_Data()
}

type WebSocketMetadata_NodeMetaData struct {
	NodeMetaData *NodeMetaData `protobuf:"bytes,3,opt,name=node_meta_data,json=nodeMetaData,proto3,oneof"`
}

type WebSocketMetadata_RequestMetaData struct {
	RequestMetaData *RequestMetaData `protobuf:"bytes,4,opt,name=request_meta_data,json=requestMetaData,proto3,oneof"`
}

func (*WebSocketMetadata_NodeMetaData) isWebSocketMetadata_Data() {}

func (*WebSocketMetadata_RequestMetaData) isWebSocketMetadata_Data() {}

type NodeMetaData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeName      string                 `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeIp        string                 `protobuf:"bytes,2,opt,name=node_ip,json=nodeIp,proto3" json:"node_ip,omitempty"`
	NodeHash      int32                  `protobuf:"varint,3,opt,name=node_hash,json=nodeHash,proto3" json:"node_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeMetaData) Reset() {
	*x = NodeMetaData{}
	mi := &file_hashing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMetaData) ProtoMessage() {}

func (x *NodeMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMetaData.ProtoReflect.Descriptor instead.
func (*NodeMetaData) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{1}
}

func (x *NodeMetaData) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeMetaData) GetNodeIp() string {
	if x != nil {
		return x.NodeIp
	}
	return ""
}

func (x *NodeMetaData) GetNodeHash() int32 {
	if x != nil {
		return x.NodeHash
	}
	return 0
}

type RequestMetaData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AssignedNodeName string                 `protobuf:"bytes,1,opt,name=assigned_node_name,json=assignedNodeName,proto3" json:"assigned_node_name,omitempty"`
	AssignedNodeIp   string                 `protobuf:"bytes,2,opt,name=assigned_node_ip,json=assignedNodeIp,proto3" json:"assigned_node_ip,omitempty"`
	RequestHash      int32                  `protobuf:"varint,3,opt,name=request_hash,json=requestHash,proto3" json:"request_hash,omitempty"`
	AssignedNodeHash int32                  `protobuf:"varint,4,opt,name=assigned_node_hash,json=assignedNodeHash,proto3" json:"assigned_node_hash,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RequestMetaData) Reset() {
	*x = RequestMetaData{}
	mi := &file_hashing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetaData) ProtoMessage() {}

func (x *RequestMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMetaData.ProtoReflect.Descriptor instead.
func (*RequestMetaData) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{2}
}

func (x *RequestMetaData) GetAssignedNodeName() string {
	if x != nil {
		return x.AssignedNodeName
	}
	return ""
}

func (x *RequestMetaData) GetAssignedNodeIp() string {
	if x != nil {
		return x.AssignedNodeIp
	}
	return ""
}

func (x *RequestMetaData) GetRequestHash() int32 {
	if x != nil {
		return x.RequestHash
	}
	return 0
}

func (x *RequestMetaData) GetAssignedNodeHash() int32 {
	if x != nil {
		return x.AssignedNodeHash
	}
	return 0
}

type WebSocketMetadataList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          []*WebSocketMetadata   `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketMetadataList) Reset() {
	*x = WebSocketMetadataList{}
	mi := &file_hashing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketMetadataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketMetadataList) ProtoMessage() {}

func (x *WebSocketMetadataList) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketMetadataList.ProtoReflect.Descriptor instead.
func (*WebSocketMetadataList) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{3}
}

func (x *WebSocketMetadataList) GetItem() []*WebSocketMetadata {
	if x != nil {
		return x.Item
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_hashing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{4}
}

var File_hashing_proto protoreflect.FileDescriptor

const file_hashing_proto_rawDesc = "" +
	"\n" +
	"\rhashing.proto\x12\x05proto\"\xca\x01\n" +
	"\x11WebSocketMetadata\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12;\n" +
	"\x0enode_meta_data\x18\x03 \x01(\v2\x13.proto.NodeMetaDataH\x00R\fnodeMetaData\x12D\n" +
	"\x11request_meta_data\x18\x04 \x01(\v2\x16.proto.RequestMetaDataH\x00R\x0frequestMetaDataB\x06\n" +
	"\x04data\"a\n" +
	"\fNodeMetaData\x12\x1b\n" +
	"\tnode_name\x18\x01 \x01(\tR\bnodeName\x12\x17\n" +
	"\anode_ip\x18\x02 \x01(\tR\x06nodeIp\x12\x1b\n" +
	"\tnode_hash\x18\x03 \x01(\x05R\bnodeHash\"\xba\x01\n" +
	"\x0fRequestMetaData\x12,\n" +
	"\x12assigned_node_name\x18\x01 \x01(\tR\x10assignedNodeName\x12(\n" +
	"\x10assigned_node_ip\x18\x02 \x01(\tR\x0eassignedNodeIp\x12!\n" +
	"\frequest_hash\x18\x03 \x01(\x05R\vrequestHash\x12,\n" +
	"\x12assigned_node_hash\x18\x04 \x01(\x05R\x10assignedNodeHash\"E\n" +
	"\x15WebSocketMetadataList\x12,\n" +
	"\x04item\x18\x01 \x03(\v2\x18.proto.WebSocketMetadataR\x04item\"\a\n" +
	"\x05Empty2E\n" +
	"\x04Node\x12=\n" +
	"\x0fGetHashRingData\x12\f.proto.Empty\x1a\x1c.proto.WebSocketMetadataListB\x04Z\x02./b\x06proto3"

var (
	file_hashing_proto_rawDescOnce sync.Once
	file_hashing_proto_rawDescData []byte
)

func file_hashing_proto_rawDescGZIP() []byte {
	file_hashing_proto_rawDescOnce.Do(func() {
		file_hashing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hashing_proto_rawDesc), len(file_hashing_proto_rawDesc)))
	})
	return file_hashing_proto_rawDescData
}

var file_hashing_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_hashing_proto_goTypes = []any{
	(*WebSocketMetadata)(nil),     // 0: proto.WebSocketMetadata
	(*NodeMetaData)(nil),          // 1: proto.NodeMetaData
	(*RequestMetaData)(nil),       // 2: proto.RequestMetaData
	(*WebSocketMetadataList)(nil), // 3: proto.WebSocketMetadataList
	(*Empty)(nil),                 // 4: proto.Empty
}
var file_hashing_proto_depIdxs = []int32{
	1, // 0: proto.WebSocketMetadata.node_meta_data:type_name -> proto.NodeMetaData
	2, // 1: proto.WebSocketMetadata.request_meta_data:type_name -> proto.RequestMetaData
	0, // 2: proto.WebSocketMetadataList.item:type_name -> proto.WebSocketMetadata
	4, // 3: proto.Node.GetHashRingData:input_type -> proto.Empty
	3, // 4: proto.Node.GetHashRingData:output_type -> proto.WebSocketMetadataList
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_hashing_proto_init() }
func file_hashing_proto_init() {
	if File_hashing_proto != nil {
		return
	}
	file_hashing_proto_msgTypes[0].OneofWrappers = []any{
		(*WebSocketMetadata_NodeMetaData)(nil),
		(*WebSocketMetadata_RequestMetaData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hashing_proto_rawDesc), len(file_hashing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hashing_proto_goTypes,
		DependencyIndexes: file_hashing_proto_depIdxs,
		MessageInfos:      file_hashing_proto_msgTypes,
	}.Build()
	File_hashing_proto = out.File
	file_hashing_proto_goTypes = nil
	file_hashing_proto_depIdxs = nil
}
