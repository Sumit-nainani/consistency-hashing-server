// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: hashing.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Node          string                 `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeRequest) Reset() {
	*x = NodeRequest{}
	mi := &file_hashing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRequest) ProtoMessage() {}

func (x *NodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRequest.ProtoReflect.Descriptor instead.
func (*NodeRequest) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{0}
}

func (x *NodeRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *NodeRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *NodeRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type NodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          string                 `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Hash          int32                  `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeResponse) Reset() {
	*x = NodeResponse{}
	mi := &file_hashing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResponse) ProtoMessage() {}

func (x *NodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResponse.ProtoReflect.Descriptor instead.
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{1}
}

func (x *NodeResponse) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *NodeResponse) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

type AddNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          int32                  `protobuf:"varint,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNodeResponse) Reset() {
	*x = AddNodeResponse{}
	mi := &file_hashing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeResponse) ProtoMessage() {}

func (x *AddNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeResponse.ProtoReflect.Descriptor instead.
func (*AddNodeResponse) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{2}
}

func (x *AddNodeResponse) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

type DeleteNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          int32                  `protobuf:"varint,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNodeResponse) Reset() {
	*x = DeleteNodeResponse{}
	mi := &file_hashing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeResponse) ProtoMessage() {}

func (x *DeleteNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeResponse.ProtoReflect.Descriptor instead.
func (*DeleteNodeResponse) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteNodeResponse) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_hashing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_hashing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_hashing_proto_rawDescGZIP(), []int{4}
}

var File_hashing_proto protoreflect.FileDescriptor

const file_hashing_proto_rawDesc = "" +
	"\n" +
	"\rhashing.proto\x12\x05proto\"C\n" +
	"\vNodeRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04node\x18\x02 \x01(\tR\x04node\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\"6\n" +
	"\fNodeResponse\x12\x12\n" +
	"\x04node\x18\x01 \x01(\tR\x04node\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\x05R\x04hash\"%\n" +
	"\x0fAddNodeResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\x05R\x04hash\"(\n" +
	"\x12DeleteNodeResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\x05R\x04hash\"\a\n" +
	"\x05Empty2\xcc\x01\n" +
	"\x04Node\x12<\n" +
	"\x11GetNodeForRequest\x12\x12.proto.NodeRequest\x1a\x13.proto.NodeResponse\x12?\n" +
	"\x11AddNodeForRequest\x12\x12.proto.NodeRequest\x1a\x16.proto.AddNodeResponse\x12E\n" +
	"\x14RemoveNodeForRequest\x12\x12.proto.NodeRequest\x1a\x19.proto.DeleteNodeResponseB\x04Z\x02./b\x06proto3"

var (
	file_hashing_proto_rawDescOnce sync.Once
	file_hashing_proto_rawDescData []byte
)

func file_hashing_proto_rawDescGZIP() []byte {
	file_hashing_proto_rawDescOnce.Do(func() {
		file_hashing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hashing_proto_rawDesc), len(file_hashing_proto_rawDesc)))
	})
	return file_hashing_proto_rawDescData
}

var file_hashing_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_hashing_proto_goTypes = []any{
	(*NodeRequest)(nil),        // 0: proto.NodeRequest
	(*NodeResponse)(nil),       // 1: proto.NodeResponse
	(*AddNodeResponse)(nil),    // 2: proto.AddNodeResponse
	(*DeleteNodeResponse)(nil), // 3: proto.DeleteNodeResponse
	(*Empty)(nil),              // 4: proto.Empty
}
var file_hashing_proto_depIdxs = []int32{
	0, // 0: proto.Node.GetNodeForRequest:input_type -> proto.NodeRequest
	0, // 1: proto.Node.AddNodeForRequest:input_type -> proto.NodeRequest
	0, // 2: proto.Node.RemoveNodeForRequest:input_type -> proto.NodeRequest
	1, // 3: proto.Node.GetNodeForRequest:output_type -> proto.NodeResponse
	2, // 4: proto.Node.AddNodeForRequest:output_type -> proto.AddNodeResponse
	3, // 5: proto.Node.RemoveNodeForRequest:output_type -> proto.DeleteNodeResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hashing_proto_init() }
func file_hashing_proto_init() {
	if File_hashing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hashing_proto_rawDesc), len(file_hashing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hashing_proto_goTypes,
		DependencyIndexes: file_hashing_proto_depIdxs,
		MessageInfos:      file_hashing_proto_msgTypes,
	}.Build()
	File_hashing_proto = out.File
	file_hashing_proto_goTypes = nil
	file_hashing_proto_depIdxs = nil
}
